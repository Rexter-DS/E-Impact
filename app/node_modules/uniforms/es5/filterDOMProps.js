"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.filterDOMProps = void 0;
var tslib_1 = require("tslib");
var pickBy_1 = tslib_1.__importDefault(require("lodash/pickBy"));
var sortedIndex_1 = tslib_1.__importDefault(require("lodash/sortedIndex"));
var sortedIndexOf_1 = tslib_1.__importDefault(require("lodash/sortedIndexOf"));
var registered = [];
function filter(props) {
    return pickBy_1.default(props, filterOne);
}
function filterOne(value, prop) {
    return sortedIndexOf_1.default(registered, prop) === -1;
}
function register() {
    var props = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        props[_i] = arguments[_i];
    }
    props.forEach(function (prop) {
        if (sortedIndexOf_1.default(registered, prop) === -1) {
            registered.splice(sortedIndex_1.default(registered, prop), 0, prop);
        }
    });
}
exports.filterDOMProps = Object.assign(filter, {
    register: register,
    registered: registered,
});
register(
// These props are provided by useField directly.
'changed', 'error', 'errorMessage', 'field', 'fieldType', 'fields', 'initialCount', 'name', 'onChange', 'transform', 'value', 
// These props are provided by useField through context.state.
'disabled', 'label', 'placeholder', 'showInlineError', 
// This is used by AutoField.
'component', 
// These is used by AutoField and bridges.
'allowedValues');
